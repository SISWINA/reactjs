{"version":3,"file":"static/js/674.4132a8f9.chunk.js","mappings":"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","sources":["Components/Feedback.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col } from 'react-bootstrap'; \r\nimport Sidenav from './Sidenav';\r\n\r\nfunction Feedback() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    feedbackType: 'general',\r\n    rating: 5,\r\n    message: '',\r\n  });\r\n\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n    setFormSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      {/* Sidebar with column size 2 */}\r\n      <Col sm={2} className=\"sidenav-col\">\r\n        <Sidenav />\r\n      </Col>\r\n      \r\n      {/* Main content with column size 8 */}\r\n      <Col sm={8} className=\"main-content-col d-flex justify-content-end\">\r\n        <div className=\"feedback-container\" style={{ maxWidth: '600px', width: '100%', padding: '20px', textAlign: 'left', marginTop: '10px' }}>\r\n          <h2>We value your feedback!</h2>\r\n          {!formSubmitted ? (\r\n            <form onSubmit={handleSubmit} className=\"feedback-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"feedbackType\">Feedback Type:</label>\r\n                <select\r\n                  id=\"feedbackType\"\r\n                  name=\"feedbackType\"\r\n                  value={formData.feedbackType}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"general\">General Feedback</option>\r\n                  <option value=\"book-request\">Book Request</option>\r\n                  <option value=\"website-issue\">Website Issue</option>\r\n                  <option value=\"other\">Other</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"rating\">Rating:</label>\r\n                <input\r\n                  type=\"range\"\r\n                  id=\"rating\"\r\n                  name=\"rating\"\r\n                  min=\"1\"\r\n                  max=\"5\"\r\n                  value={formData.rating}\r\n                  onChange={handleChange}\r\n                />\r\n                <span>{formData.rating} Stars</span>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"message\">Message:</label>\r\n                <textarea\r\n                  id=\"message\"\r\n                  name=\"message\"\r\n                  rows=\"5\"\r\n                  value={formData.message}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\" className=\"submit-button\">Submit Feedback</button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"thank-you-message\">\r\n              <h3>Thank you for your feedback!</h3>\r\n              <p>We appreciate your time and effort to share your thoughts with us.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["formData","setFormData","useState","name","email","feedbackType","rating","message","formSubmitted","setFormSubmitted","handleChange","e","target","value","_jsxs","Row","children","_jsx","Col","sm","className","Sidenav","style","maxWidth","width","padding","textAlign","marginTop","onSubmit","preventDefault","console","log","htmlFor","type","id","onChange","required","min","max","rows","React","_ref","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName"],"sourceRoot":""}